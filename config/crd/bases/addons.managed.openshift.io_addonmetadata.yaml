
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: addonmetadata.addons.managed.openshift.io
spec:
  group: addons.managed.openshift.io
  names:
    kind: AddonMetadata
    listKind: AddonMetadataList
    plural: addonmetadata
    singular: addonmetadata
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AddonMetadata is the Schema for the AddonMetadata API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'AddonMetadataSpec defines the desired state of AddonMetadata
              View markers: $ controller-gen -www crd TODO add missing fields from
              schema, only required fields from jsonschema are present'
            properties:
              addOnParameters:
                description: OCM representation of an add-on parameter
                items:
                  properties:
                    conditions:
                      items:
                        properties:
                          data:
                            additionalProperties:
                              x-kubernetes-preserve-unknown-fields: true
                            type: object
                          resource:
                            type: string
                          status:
                            properties:
                              error_msgs:
                                items:
                                  type: string
                                type: array
                              fulfilled:
                                type: boolean
                            type: object
                        required:
                        - data
                        - resource
                        type: object
                      type: array
                    default_value:
                      type: string
                    description:
                      type: string
                    editable:
                      type: boolean
                    enabled:
                      type: boolean
                    id:
                      type: string
                    name:
                      type: string
                    options:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    order:
                      type: integer
                    required:
                      type: boolean
                    validation:
                      type: string
                    validation_err_msg:
                      type: string
                    value_type:
                      type: string
                  required:
                  - description
                  - editable
                  - enabled
                  - id
                  - name
                  - required
                  - value_type
                  type: object
                type: array
              addOnRequirements:
                description: OCM representation of an addon-requirement
                items:
                  properties:
                    data:
                      additionalProperties:
                        x-kubernetes-preserve-unknown-fields: true
                      type: object
                    enabled:
                      type: boolean
                    id:
                      type: string
                    resource:
                      type: string
                    status:
                      properties:
                        error_msgs:
                          items:
                            type: string
                          type: array
                        fulfilled:
                          type: boolean
                      type: object
                  required:
                  - data
                  - enabled
                  - id
                  - resource
                  type: object
                type: array
              addonImageSetVersion:
                description: A string which specifies the imageset to use. Can either
                  be 'latest' or a version string MAJOR.MINOR.PATCH
                type: string
              addonNotifications:
                items:
                  pattern: ^([A-Za-z -]+ <[0-9A-Za-z_.-]+@redhat\.com>,?)+$
                  type: string
                type: array
              addonOwner:
                description: 'Team or individual responsible for this addon. Needs
                  to match: ''some name <some-email@redhat.com>''.'
                pattern: ^([A-Za-z -]+ <[0-9A-Za-z_.-]+@redhat\.com>,?)+$
                type: string
              bundleParameters:
                description: 'Deprecated: Replaced by SubscriptionConfig.'
                properties:
                  addonParamsSecretName:
                    pattern: ^addon-[0-9A-Za-z-]+-parameters$
                    type: string
                  alertSMTPFrom:
                    pattern: ^[0-9A-Za-z._-]+@(devshift\.net|rhmw\.io)$
                    type: string
                  alertingEmailAddress:
                    pattern: ^([0-9A-Za-z_.-]+@redhat\.com,? ?)+$
                    type: string
                  buAlertingEmailAddress:
                    pattern: ^([0-9A-Za-z_.-]+@redhat\.com,? ?)+$
                    type: string
                  useClusterStorage:
                    pattern: ^(true|false|^$)$
                    type: string
                type: object
              channels:
                description: 'Deprecated: List of channels where the addon operator
                  is available. Only needed for legacy addon builds.'
                items:
                  description: Channel - list all channels for a given operator
                  properties:
                    currentCSV:
                      type: string
                    name:
                      type: string
                  required:
                  - currentCSV
                  - name
                  type: object
                type: array
              commonAnnotations:
                additionalProperties:
                  type: string
                description: Annotations to be applied to all objects created in the
                  SelectorSyncSet.
                type: object
              commonLabels:
                additionalProperties:
                  type: string
                description: Labels to be applied to all objects created in the SelectorSyncSet.
                type: object
              deadmanssnitch:
                description: Denotes the Deadmans Snitch Configuration which is supposed
                  to be setup alongside the Addon.
                properties:
                  clusterDeploymentSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  snitchNamePostFix:
                    type: string
                  tags:
                    items:
                      pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
                      type: string
                    type: array
                  targetSecretRef:
                    properties:
                      name:
                        pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
                        type: string
                      namespace:
                        pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
                        type: string
                    type: object
                required:
                - tags
                type: object
              defaultChannel:
                description: 'OLM channel from which to install the addon-operator.
                  One of: alpha, beta, stable, edge or rc.'
                enum:
                - alpha
                - beta
                - stable
                - edge
                - rc
                type: string
              description:
                description: Short description for the addon
                type: string
              enabled:
                description: Set to true to allow installation of the addon.
                type: boolean
              extraResources:
                description: Extra Resources to be applied to the Hive cluster.
                items:
                  type: string
                type: array
              hasExternalResources:
                type: boolean
              icon:
                description: Icon to be shown in UI. Should be around 200px and base64
                  encoded.
                type: string
              id:
                description: Unique ID of the addon
                pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,30}[A-Za-z0-9]$
                type: string
              indexImage:
                pattern: ^quay\.io/osd-addons/[a-z-]+
                type: string
              installMode:
                description: 'OLM InstallMode for the addon operator. One of: AllNamespaces
                  or OwnNamespace.'
                enum:
                - AllNamespaces
                - OwnNamespace
                type: string
              label:
                description: 'Kubernetes label for the addon. Needs to match: ''api.openshift.com/<addon-id>''.'
                pattern: ^api\.openshift\.com/addon-[0-9a-z][0-9a-z-]{0,30}[0-9a-z]$
                type: string
              link:
                description: Link to the addon documentation
                pattern: ^http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$
                type: string
              manualInstallPlanApproval:
                type: boolean
              monitoring:
                description: Configuration parameters to be injected in the ServiceMonitor
                  used for federation. The target prometheus server found by matchLabels
                  needs to serve service-ca signed TLS traffic (https://docs.openshift.com/container-platform/4.6/security/certificate_types_descriptions/service-ca-certificates.html),
                  and it needs to be runing inside the monitoring.namespace, with
                  the service name 'prometheus'.
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                  matchNames:
                    items:
                      type: string
                    type: array
                  namespace:
                    type: string
                required:
                - matchLabels
                - matchNames
                - namespace
                type: object
              name:
                description: Friendly name for the addon, displayed in the UI
                type: string
              namespaceAnnotations:
                additionalProperties:
                  type: string
                description: Annotations to be applied on all listed namespaces.
                type: object
              namespaceLabels:
                additionalProperties:
                  type: string
                description: Labels to be applied on all listed namespaces.
                type: object
              namespaces:
                description: Namespaces managed by the addon-operator. Need to include
                  the TargetNamespace.
                items:
                  type: string
                type: array
                uniqueItems: true
              ocmQuotaCost:
                description: 'TODO: what is this?'
                minimum: 0
                type: integer
              ocmQuotaName:
                description: Refers to the SKU name for the addon.
                pattern: ^[A-Za-z0-9][A-Za-z0-9-_]{0,35}[A-Za-z0-9]$
                type: string
              operatorName:
                description: Name of the addon operator.
                pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,30}[A-Za-z0-9]$
                type: string
              pagerduty:
                properties:
                  acknowledgeTimeout:
                    minimum: 0
                    type: integer
                  resolveTimeout:
                    minimum: 0
                    type: integer
                  secretName:
                    pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
                    type: string
                  secretNamespace:
                    pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
                    type: string
                  snitchNamePostFix:
                    pattern: ^[A-Za-z0-9]+$
                    type: string
                required:
                - acknowledgeTimeout
                - resolveTimeout
                - secretName
                - secretNamespace
                - snitchNamePostFix
                type: object
              pullSecret:
                type: string
              quayRepo:
                description: 'Quay repository for the addon operator. Needs to match:
                  ''quay.io/osd-addons/<my-addon-repo>''.'
                pattern: ^quay\.io/osd-addons/[a-z-]+$
                type: string
              startingCSV:
                type: string
              subOperators:
                description: OCM representation of an add-on sub operator. A sub operator
                  is an operator who's life cycle is controlled by the add-on umbrella
                  operator.
                items:
                  properties:
                    enabled:
                      type: boolean
                    operator_name:
                      type: string
                    operator_namespace:
                      type: string
                  required:
                  - enabled
                  - operator_name
                  - operator_namespace
                  type: object
                type: array
              subscriptionConfig:
                description: Configs to be passed to the subscription OLM object.
                properties:
                  env:
                    items:
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                required:
                - env
                type: object
              targetNamespace:
                description: Namespace where the addon operator should be installed.
                pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
                type: string
              testHarness:
                description: 'Quay repository for the testHarness image. Needs to
                  match: ''quay.io/<my-repo>/<my-test-harness>:<my-tag>''.'
                pattern: ^quay\.io/[0-9A-Za-z._-]+/[0-9A-Za-z._-]+(:[A-Za-z0-9._-]+)?$
                type: string
            required:
            - addonOwner
            - defaultChannel
            - description
            - enabled
            - icon
            - id
            - installMode
            - label
            - name
            - namespaceAnnotations
            - namespaceLabels
            - namespaces
            - ocmQuotaCost
            - ocmQuotaName
            - operatorName
            - quayRepo
            - targetNamespace
            - testHarness
            type: object
          status:
            description: AddonMetadataStatus defines the observed state of AddonMetadata
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
